diff --git a/dev/gcc-4.4.0/gcc/config/tms9900/tms9900.c b/dev/gcc-4.4.0/gcc/config/tms9900/tms9900.c
index 565b60f..0e1f2cb 100644
--- a/dev/gcc-4.4.0/gcc/config/tms9900/tms9900.c
+++ b/dev/gcc-4.4.0/gcc/config/tms9900/tms9900.c
@@ -201,9 +201,6 @@ void override_options (void)
 static int nvolregs[]={
    HARD_LR_REGNUM,
    HARD_BP_REGNUM,
-   HARD_LW_REGNUM,
-   HARD_LP_REGNUM,
-   HARD_LS_REGNUM,
    0};
 
 
@@ -699,7 +696,6 @@ void tms9900_output_ascii(FILE* stream, const char* ptr, int len)
       fprintf (stream, "'\n");
 }
 
-
 void tms9900_expand_prologue (void)
 {
    /* Registers to save in this frame */
diff --git a/dev/gcc-4.4.0/gcc/config/tms9900/tms9900.h b/dev/gcc-4.4.0/gcc/config/tms9900/tms9900.h
index 8092478..140556a 100644
--- a/dev/gcc-4.4.0/gcc/config/tms9900/tms9900.h
+++ b/dev/gcc-4.4.0/gcc/config/tms9900/tms9900.h
@@ -253,22 +253,16 @@ extern short *reg_renumber;	/* def in local_alloc.c */
 
 /* Shift count register */
 #define HARD_SC_REGNUM		HARD_R0_REGNUM
-/* Arg pointer */
-#define HARD_AP_REGNUM		HARD_R8_REGNUM
-/* Base pointer */
-#define HARD_BP_REGNUM		HARD_R9_REGNUM
-/* Stack pointer */
-#define HARD_SP_REGNUM		HARD_R10_REGNUM
 /* Old PC after BL instruction */
 #define HARD_LR_REGNUM		HARD_R11_REGNUM
 /* CRU base address */
 #define HARD_CB_REGNUM		HARD_R12_REGNUM
-/* Old workspace after BLWP instruction */
-#define HARD_LW_REGNUM		HARD_R13_REGNUM
-/* Old PC after BLWP instruction */
-#define HARD_LP_REGNUM		HARD_R14_REGNUM
-/* Old status register after BLWP instruction */
-#define HARD_LS_REGNUM		HARD_R15_REGNUM
+/* Arg pointer */
+#define HARD_AP_REGNUM		HARD_R13_REGNUM
+/* Base pointer */
+#define HARD_BP_REGNUM		HARD_R14_REGNUM
+/* Stack pointer */
+#define HARD_SP_REGNUM		HARD_R15_REGNUM
 
 /* How to refer to registers in assembler output.  This sequence is indexed
    by compiler's hard-register-number (see above). */
@@ -298,8 +292,8 @@ extern short *reg_renumber;	/* def in local_alloc.c */
  * BLWP then we can ask them to save R13/R14/R15 themselves.
  */
 #define CALL_USED_REGISTERS \
-  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0}
-/* SC 1  2  3  4  5  6  7  AP BP SP LR CB LW LP LS*/
+  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
+/* SC 1  2  3  4  5  6  7  8  9  10 LR CB AP BP SP*/
 
 /* Define this macro to change register usage conditional on target flags. */
 #define CONDITIONAL_REGISTER_USAGE 
@@ -309,8 +303,8 @@ extern short *reg_renumber;	/* def in local_alloc.c */
 #define REG_ALLOC_ORDER	\
    {HARD_R1_REGNUM, HARD_R2_REGNUM, HARD_R3_REGNUM, HARD_R4_REGNUM,\
     HARD_R5_REGNUM, HARD_R6_REGNUM, HARD_R7_REGNUM, HARD_R8_REGNUM,\
-    HARD_CB_REGNUM, HARD_SC_REGNUM, HARD_LW_REGNUM, HARD_LP_REGNUM,\
-    HARD_LS_REGNUM, HARD_R9_REGNUM, HARD_LR_REGNUM, HARD_SP_REGNUM}
+    HARD_R9_REGNUM, HARD_R10_REGNUM, HARD_R12_REGNUM, HARD_SC_REGNUM,\
+    HARD_AP_REGNUM, HARD_BP_REGNUM, HARD_LR_REGNUM, HARD_SP_REGNUM}
 
 /* A C expression for the number of consecutive hard registers,
    starting at register number REGNO, required to hold a value of
@@ -391,14 +385,14 @@ enum reg_class
    R5      0x00000020
    R6      0x00000040
    R7      0x00000080
-   AP      0x00000100
-   BP      0x00000200
-   SP      0x00000400
+   R8      0x00000100
+   R9      0x00000200
+   R10     0x00000400
    LR      0x00000800
    CB      0x00001000
-   LW      0x00002000
-   LP      0x00004000
-   LS      0x00008000
+   AP      0x00002000
+   BP      0x00004000
+   SP      0x00008000
 --------------------------------------------------------------*/
 
 #define REG_CLASS_CONTENTS \
@@ -522,13 +516,13 @@ enum reg_class
 #define STACK_POINTER_REGNUM		HARD_SP_REGNUM
 
 /* Base register for access to local variables of the function.  */
-#define FRAME_POINTER_REGNUM		HARD_R9_REGNUM
+#define FRAME_POINTER_REGNUM		HARD_BP_REGNUM
 
 /* Base register for access to arguments of the function.  */
-#define ARG_POINTER_REGNUM		HARD_R8_REGNUM
+#define ARG_POINTER_REGNUM		HARD_AP_REGNUM
 
 /* Register in which static-chain is passed to a function.  */
-#define STATIC_CHAIN_REGNUM	        HARD_R7_REGNUM
+#define STATIC_CHAIN_REGNUM	        HARD_R12_REGNUM
 
 /* Definitions for register eliminations.
 
@@ -588,8 +582,8 @@ enum reg_class
 /* Passing Arguments in Registers.  */
 
 
-/* The number of argument registers we can use (R1..R6) */
-#define TMS9900_ARG_REGS (HARD_R7_REGNUM - HARD_R1_REGNUM)
+/* The number of argument registers we can use (R1..R10) */
+#define TMS9900_ARG_REGS (HARD_R11_REGNUM - HARD_R1_REGNUM)
 
 /* Define a data type for recording info about an argument list
    during the scan of that argument list.  This data type should
@@ -665,7 +659,7 @@ typedef struct tms9900_args
 
 /* 1 if N is a possible register number for function argument passing. */
 #define FUNCTION_ARG_REGNO_P(N)	\
-     (((N) >= HARD_R1_REGNUM) && ((N) <= HARD_R6_REGNUM))
+     (((N) >= HARD_R1_REGNUM) && ((N) <= HARD_R10_REGNUM))
 
 /* 8- and 16-bit values are returned in R1, 32-bit values are
    passed in R1+R2, The high word is in R1. */
